# 정수 X에 다음 4개의 연산을 적절히 사용해서 1을 만들 때 연산을 사용하는 횟수의 최소값?
#   1. 5로 나누어떨어지면 5로 나눈다.
#   2. 3으로 나누어떨어지면 3으로 나눈다.
#   3. 2로 나누어떨어지면 2로 나눈다.
#   4. 1을 뺸다.

# 풀이 전략
'''
    X = 10일 때 각 경우에서 호출되는 함수를 나누어보면 다음과 같다
    이 때, +1은 해당 경우에서의 연산을 의미한다.
    -1 -> f(10) = f(9) + 1
    /2 -> f(10) = f(5) + 1
    /3 -> x
    /5 -> f(10) = f(2) + 1
    이므로 f(10) = min({f(9) + 1}, {f(5) + 1}, {f(2) + 1})이고
    다시 f(9), f(5), f(2)가 각각 부분화되어
    f(9) = min({f(8) + 1}, {f(3) + 1})
    f(5) = min({f(4) + 1}, {f(1) + 1})
    f(2) = min({f(1) + 1}, {f(1) + 1})
                ...
    이렇게 계속 반복하며 같은 함수를 호출하고 같은 함수에 대한 값은 동일해야 한다.
    따라서, 해당 문제의 점화식은 a(i) = min(a(i-1), a(i/2), a(i/3), a(i/5)) + 1이다.
'''
x = int(input())

# x의 범위가 1 ~ 30000이므로 모든 경우를 포함하도록 최대값 + 1개의 리스트를 초기화
cnt = [0] * 30001

for i in range(2, x + 1):
    cnt[i] = cnt[i-1] + 1 # -1한 경우의 횟수를 기록

    # 기존에 기록된 값과 각각 해당하는 연산을 수행했을 경우 중 최소값으로 재기록
    if i % 2 == 0:
        cnt[i] = min(cnt[i], cnt[i//2] + 1) 
    if i % 3 == 0:
        cnt[i] = min(cnt[i], cnt[i//3] + 1)
    if i % 5 == 0:
        cnt[i] = min(cnt[i], cnt[i//5] + 1)

print(cnt[x])